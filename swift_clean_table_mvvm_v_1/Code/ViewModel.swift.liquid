//
//  {{ module_info.file_name }}
//  {{ module_info.project_name }}
//
//  Created by {{ developer.name }} on {{ date }}.
//  Copyright {{ year }} {{ developer.company }}. All rights reserved.
//

import RxSwift
import RxCocoa
import Common

final class {{ module_info.name }}ViewModel {
    
    private let coordinator: {{ module_info.name }}Coordinator
    private let bag = DisposeBag()

    init(coordinator: {{ module_info.name }}Coordinator) {
        self.coordinator = coordinator
    }
}

// MARK: ViewModelType
extension {{ module_info.name }}ViewModel: {{ module_info.name }}ViewModelType {
    
    struct Input: {{ module_info.name }}Input {
        let viewWillAppear: Driver<Void>
    }
    
    struct Output: {{ module_info.name }}Output {
        let items: Driver<[{{ module_info.name }}CellType]>
    }
    
    func transform(input: {{ module_info.name }}Input) -> {{ module_info.name }}Output {
        Output(items: .just([]))
    }

    func getInput(viewWillAppear: Driver<Void>) -> {{ module_info.name }}Input {
        Input(viewWillAppear: viewWillAppear)
    }
}